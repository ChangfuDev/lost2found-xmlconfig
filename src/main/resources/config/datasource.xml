<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx.xsd">

  <description>spring数据源配置</description>

  <!-- 默认dataSource，druid连接池 -->
  <bean id="defaultDataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
    <!-- 连接信息 -->
    <property name="driverClassName" value="${jdbc.driverClass}"/>
    <property name="url" value="${jdbc.url}"/>
    <property name="username" value="${jdbc.username}"/>
    <property name="password" value="${jdbc.password}"/>
    <!-- 其他设置 -->
    <property name="filters" value="stat"/>
    <property name="initialSize" value="${jdbc.minPoolSize}"/>
    <property name="maxActive" value="${jdbc.maxPoolSize}"/>
    <property name="minIdle" value="${jdbc.minIdleSize}"/>
    <property name="maxWait" value="${jdbc.maxWait}"/>
    <property name="timeBetweenEvictionRunsMillis" value="60000"/>
    <property name="minEvictableIdleTimeMillis" value="300000"/>
    <property name="validationQuery" value="SELECT 'x'"/>
    <property name="testWhileIdle" value="true"/>
    <property name="testOnBorrow" value="false"/>
    <property name="testOnReturn" value="false"/>
    <property name="poolPreparedStatements" value="true"/>
    <property name="maxOpenPreparedStatements" value="20"/>
  </bean>

  <!-- mybatis，通用sqlSessionFactory配置 -->
  <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
    <!-- 选择dataSource -->
    <property name="dataSource" ref="defaultDataSource"/>
    <!-- 别名设置 -->
    <property name="typeAliasesPackage" value="cn.sevenleave.xmlconfig.*.model"/>
    <!-- 配置*Mapper.xml的路径 -->
    <property name="mapperLocations">
      <list>
        <value>
          classpath*:**/mapper/mapping/*Mapper.xml
        </value>
      </list>
    </property>
    <property name="configuration">
      <bean class="org.apache.ibatis.session.Configuration">
        <property name="callSettersOnNulls" value="true"/>
      </bean>
    </property>
    <!-- pageHelper插件 -->
    <property name="plugins">
      <array>
        <bean class="com.github.pagehelper.PageInterceptor">
          <property name="properties">
            <value>
              reasonable=true
            </value>
          </property>
        </bean>
      </array>
    </property>
  </bean>

  <!-- 通用session模板，供service层引用来使用 -->
  <bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate" scope="prototype">
    <constructor-arg index="0" ref="sqlSessionFactory"/>
    <!-- 如果使用批处理BATCH，则导致获取insert,update返回的行数失败;批处理的场景：如foreach获取对象，将其循环插入到数据库中 -->
    <!--<constructor-arg index="1" type="org.apache.ibatis.session.ExecutorType" value="BATCH"/>-->
    <constructor-arg index="1" type="org.apache.ibatis.session.ExecutorType" value="SIMPLE"/>
  </bean>

  <!-- 通用mapper包扫描 -->
  <!-- 注意！！这里使用的是tk.mybatis.*，如果不需要用通用mapper的话，应该改成org.mybatis.* -->
  <bean class="tk.mybatis.spring.mapper.MapperScannerConfigurer">
    <property name="basePackage" value="cn.sevenleave.xmlconfig.**.mapper"/>
    <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
    <property name="sqlSessionTemplateBeanName" value="sqlSessionTemplate"/>
  </bean>

  <!-- 通用事务管理器：可以使用声明式事务管理 -->
  <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
    <property name="dataSource" ref="defaultDataSource"/>
  </bean>
  <!-- 启用annotation定义事务 -->
  <tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true"/>


</beans>